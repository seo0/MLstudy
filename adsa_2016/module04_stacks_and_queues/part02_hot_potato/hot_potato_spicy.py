"""
THE "SPICY" HOT POTATO GAME:

This time, we "spice up" the hot potato simulator by introducing (i) lives and (ii) some randomness.

Like in common videogames, in this new version of the hot potato game players have "lives",
so the list of players is actually a list of list (or a matrix)
in which each player  has a name and a number of lives: e.g., ("[Marco", 7], ["Hoang", 5], ["Alice", 9])

When a round of the game ends, the loser should lose one "life". If the loser has only one life left,
then they should be eliminated. However, we also introduce "randomness" in the game...

Randomness: players do not loose a life (or get eliminated) with certainty at the end of each round.
Once a loser is determined at the end of one round, there is a 50% chance that the loser will keep their life, and a 50% chance
that they will lose it. To simulate the 50% you can check the value of the random number generated by the
Python internal function random(), which returns a random floating point between 0 and 1 (see import statement)

ex.:

if random() > 0.5:
    # do something (e.g. keep the life)
else:
    # do something else (e.g. lose life or get eliminated)
"""

from module04_stacks_and_queues.part00_preclass.queue import ArrayQueue
from random import random


def hot_potato_spicy(name_list, num):
    """
    Simulates the Hot potato game "spiced up" with lives and randomness

    :param name_list: a list containing the name of the participants and their number of lives
    :param num: the counting constant (e.g., the length of each round of the game)
    :return: the winner
    """
    pass


if __name__ == '__main__':
    name_list = (["Marco", 5], ["John", 5], ["Hoang", 5], ["Minji", 5], ["Hyunsuk", 5], ["Jiwoo", 5])
    winner = hot_potato_spicy(name_list, 21)
    # winner = hot_potato(name_list, 5)
    print("...and the winner is: {0}".format(winner))
